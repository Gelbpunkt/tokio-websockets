[package]
name = "tokio-websockets"
version = "0.7.0"
edition = "2021"
description = "High performance, strict, tokio-util based WebSockets implementation"
categories = ["web-programming::websocket", "network-programming", "asynchronous", "concurrency"]
repository = "https://github.com/Gelbpunkt/tokio-websockets/"
rust-version = "1.64"
license = "MIT"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bytes = "1"
futures-core = "0.3"
futures-sink = "0.3"
tokio = "1"
tokio-util = { version = "0.7.1", features = ["codec", "io"] }
# tracing-attributes 0.1.27 (required by tracing 0.1.39) is the first version to depend on proc-macro2 > 1.0.60
# All older proc-macro2 versions use unknown features and break minvers
# This is a transitive dependency through tokio-util
tracing = { version = "0.1.39", default-features = false }

# SHA-1 fallback when no TLS is enabled
sha1_smol = { version = "1.0", optional = true }

# Randomness providers
fastrand = { version = "2.0", default-features = false, features = ["std"], optional = true }
getrandom = { version = "0.2", default-features = false, optional = true }
rand = { version = "0.8", default-features = false, features = ["std", "std_rng"], optional = true }

# SIMD
# We enable aarch64_neon feature because it is MSRV-gated but ours is higher than 1.59
simdutf8 = { version = "0.1", default-features = false, features = ["std", "aarch64_neon"], optional = true }

# Client
base64 = { version = "0.22", optional = true }
http = { version = "1", default-features = false, features = ["std"], optional = true }
httparse = { version = "1.6", optional = true }

# Native TLS
tokio-native-tls = { version = "0.3", optional = true }

# Rustls
rustls-pki-types = { version = "1", optional = true }
ring = { version = "0.17", default-features = false, optional = true }
rustls-native-certs = { version = "0.7", default-features = false, optional = true }
tokio-rustls = { version = "0.26", default-features = false, optional = true }
webpki-roots = { version = "0.26", default-features = false, optional = true }

# Users can manually tune into OpenSSL for SHA-1 when native-tls is enabled
openssl = { version = "0.10", default-features = false, optional = true }

[features]
client = ["dep:base64", "dep:http", "dep:httparse", "tokio/net", "tokio/io-util"]
http-integration = []
aws_lc_rs = ["tokio-rustls?/aws_lc_rs"] # Underscores for consistency with other rustls crates
aws-lc-rs = ["aws_lc_rs"] # Alias because Cargo features commonly use `-`
ring = ["dep:ring", "tokio-rustls?/ring"]
server = ["dep:base64", "dep:http", "dep:httparse", "tokio/io-util"]
simd = ["dep:simdutf8"]
native-tls = ["dep:tokio-native-tls"]
rustls-webpki-roots = ["dep:rustls-pki-types", "dep:tokio-rustls", "dep:webpki-roots"]
rustls-native-roots = ["dep:rustls-pki-types", "dep:tokio-rustls", "dep:rustls-native-certs"]
rustls-tls12 = ["tokio-rustls?/tls12"]
nightly = ["simdutf8?/aarch64_neon_prefetch"]

[dev-dependencies]
futures-util = { version = "0.3.14", default-features = false, features = ["sink"] }
# For tests
hyper = { version = "1", default-features = false }
hyper-util = { version = "0.1", default-features = false, features = ["client-legacy", "http1", "tokio"] }
rustls-pemfile = "2"
rustls-pki-types = "1"
tokio = { version = "1", default-features = false, features = ["net", "macros", "rt-multi-thread"] }
tokio-rustls = "0.26"

[[example]]
name = "autobahn_client"
required-features = ["client"]

[[example]]
name = "autobahn_server"
required-features = ["server"]

[[example]]
name = "client"
required-features = ["client"]

[[example]]
name = "echo_server"
required-features = ["server"]

[[example]]
name = "native_tls_self_signed_client"
required-features = ["client", "native-tls"]

[[example]]
name = "rustls_server"
required-features = ["server"]

[[example]]
name = "server"
required-features = ["server"]

[[example]]
name = "utf8_benchmark_client"
required-features = ["client"]

[[example]]
name = "utf8_benchmark_server"
required-features = ["server"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile.release]
codegen-units = 1
debug = false
incremental = false
lto = true
opt-level = 3
